//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IisAdmin.TestConsole.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAdministration")]
    public interface IAdministration {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/AddUser", ReplyAction="http://tempuri.org/IAdministration/AddUserResponse")]
        bool AddUser(string username, string passwd, string fqdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/AddUser", ReplyAction="http://tempuri.org/IAdministration/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(string username, string passwd, string fqdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/DelUser", ReplyAction="http://tempuri.org/IAdministration/DelUserResponse")]
        bool DelUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/DelUser", ReplyAction="http://tempuri.org/IAdministration/DelUserResponse")]
        System.Threading.Tasks.Task<bool> DelUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/SetPasswd", ReplyAction="http://tempuri.org/IAdministration/SetPasswdResponse")]
        bool SetPasswd(string username, string passwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/SetPasswd", ReplyAction="http://tempuri.org/IAdministration/SetPasswdResponse")]
        System.Threading.Tasks.Task<bool> SetPasswdAsync(string username, string passwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/ResetPermissions", ReplyAction="http://tempuri.org/IAdministration/ResetPermissionsResponse")]
        bool ResetPermissions(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/ResetPermissions", ReplyAction="http://tempuri.org/IAdministration/ResetPermissionsResponse")]
        System.Threading.Tasks.Task<bool> ResetPermissionsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/AddHost", ReplyAction="http://tempuri.org/IAdministration/AddHostResponse")]
        bool AddHost(string username, string fqdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/AddHost", ReplyAction="http://tempuri.org/IAdministration/AddHostResponse")]
        System.Threading.Tasks.Task<bool> AddHostAsync(string username, string fqdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/DelHost", ReplyAction="http://tempuri.org/IAdministration/DelHostResponse")]
        bool DelHost(string username, string fqdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/DelHost", ReplyAction="http://tempuri.org/IAdministration/DelHostResponse")]
        System.Threading.Tasks.Task<bool> DelHostAsync(string username, string fqdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/MkDir", ReplyAction="http://tempuri.org/IAdministration/MkDirResponse")]
        bool MkDir(string username, string directory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/MkDir", ReplyAction="http://tempuri.org/IAdministration/MkDirResponse")]
        System.Threading.Tasks.Task<bool> MkDirAsync(string username, string directory);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdministrationChannel : IisAdmin.TestConsole.ServiceReference1.IAdministration, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministrationClient : System.ServiceModel.ClientBase<IisAdmin.TestConsole.ServiceReference1.IAdministration>, IisAdmin.TestConsole.ServiceReference1.IAdministration {
        
        public AdministrationClient() {
        }
        
        public AdministrationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdministrationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddUser(string username, string passwd, string fqdn) {
            return base.Channel.AddUser(username, passwd, fqdn);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(string username, string passwd, string fqdn) {
            return base.Channel.AddUserAsync(username, passwd, fqdn);
        }
        
        public bool DelUser(string username) {
            return base.Channel.DelUser(username);
        }
        
        public System.Threading.Tasks.Task<bool> DelUserAsync(string username) {
            return base.Channel.DelUserAsync(username);
        }
        
        public bool SetPasswd(string username, string passwd) {
            return base.Channel.SetPasswd(username, passwd);
        }
        
        public System.Threading.Tasks.Task<bool> SetPasswdAsync(string username, string passwd) {
            return base.Channel.SetPasswdAsync(username, passwd);
        }
        
        public bool ResetPermissions(string username) {
            return base.Channel.ResetPermissions(username);
        }
        
        public System.Threading.Tasks.Task<bool> ResetPermissionsAsync(string username) {
            return base.Channel.ResetPermissionsAsync(username);
        }
        
        public bool AddHost(string username, string fqdn) {
            return base.Channel.AddHost(username, fqdn);
        }
        
        public System.Threading.Tasks.Task<bool> AddHostAsync(string username, string fqdn) {
            return base.Channel.AddHostAsync(username, fqdn);
        }
        
        public bool DelHost(string username, string fqdn) {
            return base.Channel.DelHost(username, fqdn);
        }
        
        public System.Threading.Tasks.Task<bool> DelHostAsync(string username, string fqdn) {
            return base.Channel.DelHostAsync(username, fqdn);
        }
        
        public bool MkDir(string username, string directory) {
            return base.Channel.MkDir(username, directory);
        }
        
        public System.Threading.Tasks.Task<bool> MkDirAsync(string username, string directory) {
            return base.Channel.MkDirAsync(username, directory);
        }
    }
}
